/*
Gumroad tutorial: https://0xca0a.gumroad.com/l/B4N4N4S
-------------------------------------------------------------------------------
Model auto-generated by: https://github.com/pmndrs/gltfjsx
Author: thesidekick (https://sketchfab.com/thesidekick)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/banana-dda3a1f707a94c52bed79578e120937c
Title: Banana
*/

import { createRoot } from 'react-dom/client'
import { Suspense, useRef, useState ,useEffect, useLayoutEffect} from 'react'
import './index.css'
import Overlay from './layout/Overlay'
import { FadeIn, LeftMiddle, RoomDiv, Screen1, Screen2, Screen3, BottomCenter, TextRoom,ScreenRoom} from './layout/styles'

import Bananas from './Bananas'
import Room from './components/Room'
import {gsap } from "gsap"
import { ScrollTrigger } from 'gsap/all'
// Comment the above and uncomment the following to import the WebGL BG lazily for faster loading times
// const Bananas = lazy(() => import('./Bananas'))
gsap.registerPlugin(ScrollTrigger)

function App() {
  const [speed, set] = useState(1)
  const [hiddenScreen1, setHiddenScreen1] = useState(true);
  const roomRef = useRef(null);
  const screen2Ref = useRef(null);

  useEffect(()=>{
    const el = roomRef.current;
    const t = screen2Ref.current;
    gsap.to(el, {
      x:500,
      duration:3,
      toggleActions: "restart reverse",
      scrollTrigger:{
        trigger:t,
        markers:true,
      },
    })
  }, [])



  return (
    <>
    {/* {hiddenScreen1 == false ?  <Screen1 >
      <Suspense fallback={null}>
          <Bananas speed={speed} />
          <FadeIn />
        </Suspense>
        <Overlay />
        <LeftMiddle>
          <input type="range" min="0" max="10" value={speed} step="1" onChange={(e) => set(e.target.value)} />
        </LeftMiddle>
        <BottomCenter>
          <button onClick={()=> {setHiddenScreen1(true)}}>
            click me
          </button>
        </BottomCenter>
    </Screen1>
   :
      
      <Screen2>
        <RoomDiv>
          <Room/>
        </RoomDiv>
        <TextRoom>
          sss
        </TextRoom>
      </Screen2>

  } */}

      <ScreenRoom>
        <RoomDiv ref ={roomRef} >
          <Room/>
        </RoomDiv>
        <TextRoom>
          <div>
            ss
          </div>
        </TextRoom>
      </ScreenRoom>

    {/* <div id="ssd">ssssdf</div>

      <div style={{margin:"100px"}}  ref={screen2Ref}>
        rerere
      </div> */}

      <Screen2  >
        
        <TextRoom>
          sss
        </TextRoom>
      </Screen2>

      <Screen2   className="screen3">
        
        <TextRoom ref={screen2Ref}>
          sss33
        </TextRoom>
      </Screen2>

      <Screen2  >
        
        <TextRoom>
          sss4
        </TextRoom>
      </Screen2>

      <Screen2  >
        
        <TextRoom>
          ss5
        </TextRoom>
      </Screen2>
    </>
  )
}

createRoot(document.getElementById('root')).render(<App />)
